{"version":3,"sources":["components/helpers/NavBar.js","components/helpers/Consts.js","components/Home.js","components/helpers/InputDropdown.js","components/helpers/InputText.js","components/helpers/RecipeCard.js","components/ForDish.js","components/ForLeftover.js","components/ForTimePDV.js","components/ForTimeSteps.js","components/CommonIngredients.js","components/FewIngredients.js","components/ForLazyCooking.js","components/ExcludeIngredients.js","components/NutritionalNeeds.js","components/RestrictionsNeeds.js","components/ForRestrictionsNeeds.js","components/UniqueDishes.js","components/App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","recipeCount","title","options","sortByWithIngredients","rating","cookingTime","ingredientsCount","includedIngredientsCount","Object","keys","map","key","filter","sortBy","restrictions","nut","meat","matchCategoryWithDb","str","separateInputString","split","item","trim","formatStr","name","word","charAt","toUpperCase","slice","join","Home","useHistory","useState","topRecipes","setTopRecipes","randomRecipe","setRandomRecipe","useEffect","cachedTopRecipes","JSON","parse","localStorage","getItem","forEach","recipe","console","log","fetch","then","res","json","data","setItem","stringify","catch","e","alert","getTopRecipes","idx","id","InputDropdown","onSelectionChange","onChange","target","value","option","i","InputText","onInputChange","placeholder","type","RecipeCard","minutes","stepCount","ratings","String","substr","ratingsCount","totalPDV","ForDish","dishName","setDishName","recipeCountConsts","setRecipeCount","sortByConsts","setSortBy","recipes","setRecipes","onClick","_","URLSearchParams","ForLeftover","ingredients","setIngredients","separatedIngredients","params","append","fetchResults","ForTimePDV","cachedTimePDV","method","ForTimeSteps","time","ingredientCount","ratingCount","CommonIngredients","cachedIngredients","ingredient","count","FewIngredients","ForLazyCooking","setOption","getOptionContent","ExcludeIngredients","separateIngredients","NutritionalNeeds","nutritions","setNutritions","RestrictionsNeeds","restrictionConsts","restriction","setRestriction","ForRestrictionsNeeds","UniqueDishes","uniqueDishes","App","exact","path","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4356981e.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../style/NavBar.css'\r\n\r\nconst NavBar = () => {\r\n\treturn (\r\n\t\t<div className='NavBar'>\r\n\t\t\t<a className='nav home' href=\"/\">Home</a>\r\n\t\t\t<div className='page-listing'>Find recipes for:</div>\r\n\t\t\t<a className='nav for' href=\"/for-a-dish\">a dish</a>\r\n\t\t\t<a className='nav for' href=\"/for-unique-dishes\">unique dishes</a>\r\n\t\t\t<a className='nav for' href=\"/for-lazy-cooking\">lazy cooking</a>\r\n\t\t\t<a className='nav for' href=\"/for-restrictions-and-needs\">restrictions & needs</a>\r\n\t\t</div>)\r\n}\r\n\r\nexport default NavBar;","const recipeCount = {\r\n\ttitle: 'No. of recipes',\r\n\toptions: [10, 20, 30]\r\n}\r\n\r\nconst cookingTime = {\r\n\ttitle: 'Cooking time',\r\n}\r\n\r\nconst sortByWithIngredients = {\r\n\ttitle: 'Sort by',\r\n\trating: 'Ratings',\r\n\tcookingTime: 'Cooking time',\r\n\tingredientsCount: 'No. of ingredients',\r\n\tincludedIngredientsCount: 'No. of input ingredients'\r\n}\r\nsortByWithIngredients.options = Object.keys(sortByWithIngredients).map((key) => sortByWithIngredients[key])\r\nsortByWithIngredients.options = sortByWithIngredients.options.filter(key => key !== sortByWithIngredients.title)\r\n\r\nconst sortBy = {\r\n\ttitle: 'Sort by',\r\n\trating: 'Ratings',\r\n\tcookingTime: 'Cooking time',\r\n\tingredientsCount: 'No. of ingredients',\r\n}\r\nsortBy.options = Object.keys(sortBy).map((key) => sortBy[key])\r\nsortBy.options = sortBy.options.filter(key => key !== sortBy.title)\r\n\r\nconst restrictions = {\r\n\ttitle: 'Restriction',\r\n\tnut: 'Nut',\r\n\tmeat: 'Meat',\r\n}\r\nrestrictions.options = Object.keys(restrictions).map((key) => restrictions[key])\r\nrestrictions.options = restrictions.options.filter(key => key !== restrictions.title)\r\n\r\nconst matchCategoryWithDb = (str) => {\r\n\t// for sort by\r\n\tif (str === sortBy.title) return 'name'\r\n\tif (str === sortBy.rating) return 'ratings'\r\n\tif (str === sortBy.cookingTime) return 'minutes'\r\n\tif (str === sortBy.ingredientsCount) return 'ingredientsCount'\r\n\tif (str === sortByWithIngredients.includedIngredientsCount) return 'includedIngredientsCount'\r\n\tif (str === restrictions.nut) return 'nut'\r\n\tif (str === restrictions.meat) return 'meat'\r\n}\r\n\r\nconst separateInputString = (str) =>\r\n\tstr.split(',') // separate incredients by comma\r\n\t.map(item => item.trim()) // get rid of white space\r\n\t.filter(item => item !== '') // get rid of emptry string\r\n\r\nconst formatStr = (name) =>{\r\n\treturn name.split(' ')\r\n\t\t.map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n\t\t.join(' ')\r\n}\r\n\r\nexport  {\r\n\trecipeCount,\r\n\trestrictions,\r\n\tsortBy,\r\n\tsortByWithIngredients,\r\n\tmatchCategoryWithDb,\r\n\tcookingTime,\r\n\tseparateInputString,\r\n\tformatStr\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from './helpers/NavBar'\r\nimport { formatStr } from \"./helpers/Consts\"\r\nimport '../style/Home.css'\r\n\r\nconst Home = () => {\r\n\tconst history = useHistory()\r\n\tconst [topRecipes, setTopRecipes] = useState([])\r\n\tconst [randomRecipe, setRandomRecipe] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTopRecipes = () => {\r\n\t\t\tconst cachedTopRecipes = JSON.parse(localStorage.getItem('topRecipes'))\r\n\r\n\t\t\tif (cachedTopRecipes) {\r\n\t\t\t\tcachedTopRecipes.forEach(recipe => console.log(recipe))\r\n\t\t\t\tsetTopRecipes(cachedTopRecipes)\r\n\t\t\t}\r\n\r\n\t\t\tfetch('/top-recipes')\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tconst json = res.json()\r\n\t\t\t\t\treturn json\r\n\t\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\tsetTopRecipes(data)\r\n\t\t\t\t\t \r\n\t\t\t\t\t// Cache this to local storage since the results are static\r\n\t\t\t\t\tlocalStorage.setItem('topRecipes',  JSON.stringify(data))\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => {\r\n\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tconst getRandomRecipe = () => {\r\n\t\t\tfetch('/random-recipe')\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\tsetRandomRecipe(data[0])\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => {\r\n\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t\talert(`Something went wrong when getting random recipe for 'Our picks'`)\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tgetTopRecipes()\r\n\t\tgetRandomRecipe()\r\n\t}, [])\r\n\t\r\n\treturn (\r\n\t\t<div className='Home'>\r\n\t\t\t<div className='title'>Find me recipes</div>\r\n\t\t\t<div className='recipes'>\r\n\t\t\t\t<div className='top-recipes container'> \r\n\t\t\t\t\t<div className='column-header'>Top rated recipes</div>\r\n\t\t\t\t\t\t{ topRecipes.map((recipe, idx) => \r\n\t\t\t\t\t\t\t<div className='recipe' key={idx}> \r\n\t\t\t\t\t\t\t\t<a href={`https://www.food.com/recipe/${recipe.id}`} >{formatStr(recipe.name)}</a> \r\n\t\t\t\t\t\t\t</div>) }\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='random-recipe container'> \r\n\t\t\t\t\t<div className='column-header'>Our pick</div>\r\n\t\t\t\t\t<div className='recipe'>\r\n\t\t\t\t\t\t{randomRecipe ? <a href={`https://www.food.com/recipe/${randomRecipe.id}`} >{formatStr(randomRecipe.name)}</a> : <></> }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport '../../style/InputDropdown.css'\r\n\r\nconst InputDropdown = ({ name, onSelectionChange, title, options }) => {\r\n\r\n\treturn (\r\n\t\t<div className={`input-container ${name}`}>\r\n\t\t\t<div className='input-title'>{title}</div>\r\n\t\t\t<div className='select'>\r\n\t\t\t\t<select className='input dropdown' onChange={e => onSelectionChange(e.target.value)}>\r\n\t\t\t\t\t{options.map((option, i) => \r\n\t\t\t\t\t\t<option className='dropdown-option' key={`${name}-${i}`}>{option}</option>)}\r\n\t\t\t\t</select>\t\t\t\t\r\n\t\t\t</div>\t\t\r\n\t\t</div>)\r\n}\r\n\r\nexport default InputDropdown;","import React from 'react'\r\nimport '../../style/InputText.css'\r\n\r\nconst InputText = ({ name, onInputChange, title, placeholder }) => {\r\n\t\r\n\treturn (\r\n\t\t<div className={`input-container ${name}`}>\r\n\t\t\t<div className='input-title'>{title}</div>\r\n\t\t\t<input \r\n\t\t\t\tclassName='input-text' \r\n\t\t\t\ttype='text' \r\n\t\t\t\tplaceholder={placeholder} \r\n\t\t\t\tonChange={e => onInputChange(e.target.value)}/>\r\n\t\t</div>)\r\n}\r\n\r\nexport default InputText;","import React from 'react'\r\nimport {formatStr} from './Consts'\r\nimport '../../style/RecipeCard.css'\r\n\r\nconst RecipeCard = ({ recipe }) => {\r\n\r\n\treturn (\r\n\t\t<div className='RecipeCard'>\r\n\t\t\t<div className='name'><a href={`https://www.food.com/recipe/${recipe.id}`}>{formatStr(recipe.name)}</a></div>\r\n\t\t\t{ recipe.minutes? <div className='cooking-time'>Cooking time: {recipe.minutes} min</div> : <></> }\r\n\t\t\t{ recipe.ingredientsCount? \t<div className='ingredient-count'>No. of ingredients: {recipe.ingredientsCount}</div> : <></> }\r\n\t\t\t{ recipe.includedIngredientsCount? \t<div className='ingredient-count'>No. of input ingredients: {recipe.includedIngredientsCount}</div> : <></> }\r\n\t\t\t{ recipe.stepCount? <div className='step-count'>Number of steps: {recipe.stepCount}</div> : <></> }\r\n\t\t\t{ recipe.ratings? <div className='rating'>Ratings: {String(recipe.ratings).substr(0, 3)}/5</div> : <></> }\r\n\t\t\t{ recipe.ratingsCount? <div className='rating-count'>Number of ratings: {recipe.ratingsCount} min</div> : <></>}\r\n\t\t\t{ recipe.totalPDV? <div className='total-pdv'>Total PDV: {recipe.totalPDV}</div> : <></> }\r\n\t\t</div>)\r\n}\r\n\r\nexport default RecipeCard;","import React, { useState } from 'react'\r\nimport InputDropdown from './helpers/InputDropdown'\r\nimport InputText from './helpers/InputText'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport {\r\n\tsortBy as sortByConsts,\r\n\trecipeCount as recipeCountConsts,\r\n\tmatchCategoryWithDb\r\n} from './helpers/Consts'\r\nimport '../style/ForDish.css'\r\n\r\nconst ForDish = () => {\r\n\r\n\tconst [dishName, setDishName] = useState('')\r\n\tconst [recipeCount, setRecipeCount] = useState(recipeCountConsts.options[0])\r\n\tconst [sortBy, setSortBy] = useState(sortByConsts.options[0])\r\n\tconst [recipes, setRecipes] = useState([])\r\n\r\n\tconst fetchResults = () => {\r\n\t\tfetch(`/with-name?`\r\n\t\t\t+ new URLSearchParams({\r\n\t\t\t\trecipeCount: recipeCount,\r\n\t\t\t\tsortBy: matchCategoryWithDb(sortBy),\r\n\t\t\t\tname: dishName,\r\n\t\t\t}))\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst json = res.json()\r\n\t\t\t\treturn json\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tsetRecipes(data)\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='ForDish'>\r\n\t\t\t<div className='title'> Recipes for a dish</div>\r\n\t\t\t<div className='inputs'>\r\n\t\t\t\t<InputText\r\n\t\t\t\t\tname='dish-name'\r\n\t\t\t\t\ttitle={'Dish name'}\r\n\t\t\t\t\tonInputChange={setDishName}\r\n\t\t\t\t\tplaceholder='Enter the dish name here...' />\r\n\t\t\t\t<InputDropdown\r\n\t\t\t\t\tname='recipe-count'\r\n\t\t\t\t\ttitle={recipeCountConsts.title}\r\n\t\t\t\t\tonSelectionChange={setRecipeCount}\r\n\t\t\t\t\toptions={recipeCountConsts.options} />\r\n\t\t\t\t<InputDropdown\r\n\t\t\t\t\tname='sort-by'\r\n\t\t\t\t\ttitle={sortByConsts.title}\r\n\t\t\t\t\tonSelectionChange={setSortBy}\r\n\t\t\t\t\toptions={sortByConsts.options} />\r\n\t\t\t\t<div className='button' onClick={_ => fetchResults()}>Find</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, i) =>\r\n\t\t\t\t\t<div key={`recipe-${i}`}>\r\n\t\t\t\t\t\t<RecipeCard recipe={recipe} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ForDish;","import React, { useState } from 'react'\r\nimport InputDropdown from './helpers/InputDropdown'\r\nimport InputText from './helpers/InputText'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport { \r\n\tsortByWithIngredients as sortByConsts, \r\n\trecipeCount as recipeCountConsts, \r\n\tmatchCategoryWithDb,\r\n\tseparateInputString \r\n} from './helpers/Consts'\r\nimport '../style/ForLeftover.css'\r\n\r\nconst ForLeftover = () => {\r\n\r\n\tconst [ingredients, setIngredients] = useState('')\r\n\tconst [recipeCount, setRecipeCount] = useState(recipeCountConsts.options[0])\r\n\tconst [sortBy, setSortBy] = useState(sortByConsts.options[0])\r\n\tconst [recipes, setRecipes] = useState([])\r\n\r\n\tconst fetchResults = () => {\r\n\t\tconst separatedIngredients = separateInputString(ingredients)\r\n\t\tconst params = new URLSearchParams()\r\n\t\t\r\n\t\tseparatedIngredients.forEach(item => \r\n\t\t\tparams.append('ingredients[]', item))\r\n\t\t\r\n\t\tparams.append('recipeCount', recipeCount)\r\n\t\tparams.append('sortBy', matchCategoryWithDb(sortBy))\r\n\t\tconsole.log(sortBy)\r\n\r\n\t\tfetch('/with-ingredients?' + params)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst json = res.json()\r\n\t\t\t\treturn json\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tsetRecipes(data)\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='ForLeftover'>\r\n\t\t\t<div className='inputs'>\r\n\t\t\t\t<InputText\r\n\t\t\t\t\tname='ingredients'\r\n\t\t\t\t\ttitle={'Ingredients'}\r\n\t\t\t\t\tonInputChange={setIngredients}\r\n\t\t\t\t\tplaceholder='Input up to 3 ingredients and separate them by comma...' />\r\n\t\t\t\t<InputDropdown name='recipe-count' title={recipeCountConsts.title}\r\n\t\t\t\t\tonSelectionChange={setRecipeCount} options={recipeCountConsts.options} />\r\n\t\t\t\t<InputDropdown name='sort-by' title={sortByConsts.title}\r\n\t\t\t\t\tonSelectionChange={setSortBy} options={sortByConsts.options} />\r\n\t\t\t\t<div className='button' onClick={e => fetchResults()}>Find</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, i) =>\r\n\t\t\t\t\t<div key={`recipe-${i}`}>\r\n\t\t\t\t\t\t<RecipeCard recipe={recipe}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ForLeftover;","import React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport InputDropdown from './helpers/InputDropdown'\r\nimport InputText from './helpers/InputText'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport { sortBy as sortByConsts, recipeCount as recipeCountConsts } from './helpers/Consts.js'\r\n\r\nconst ForTimePDV = () => {\r\n\tconst [recipes, setRecipes] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchResults = () => {\r\n\t\t\tfetch(`/lowest-time-pdv`, { method: 'GET' })\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tconst json = res.json()\r\n\t\t\t\t\treturn json\r\n\t\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetRecipes(data)\r\n\t\t\t\t\tlocalStorage.setItem('timePDV', JSON.stringify(data))\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => {\r\n\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst cachedTimePDV = JSON.parse(localStorage.getItem('timePDV'))\r\n\t\tif (cachedTimePDV) {\r\n\t\t\tsetRecipes(cachedTimePDV)\r\n\t\t} else {\r\n\t\t\tfetchResults()\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='ForTimePDV'>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, i) =>\r\n\t\t\t\t\t<div key={`recipe-${i}`}>\r\n\t\t\t\t\t\t<RecipeCard recipe={recipe}/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ForTimePDV;","import React, { useEffect, useState } from 'react'\r\nimport InputDropdown from './helpers/InputDropdown'\r\nimport InputText from './helpers/InputText'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport { sortBy as sortByConsts, recipeCount as recipeCountConsts } from './helpers/Consts'\r\n\r\nconst ForTimeSteps = () => {\r\n\tconst [recipes, setRecipes] = useState([])\r\n\r\n\r\n\tconst fetchResults = () => {\r\n\t\tfetch(`/lowest-time-steps`, { method: 'GET' })\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst json = res.json()\r\n\t\t\t\treturn json\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetRecipes(data)\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchResults()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='ForTimeSteps'>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, i) =>\r\n\t\t\t\t\t<div key={`recipe-${i}`}>\r\n\t\t\t\t\t\t<RecipeCard\r\n\t\t\t\t\t\t\tname={recipe.name}\r\n\t\t\t\t\t\t\tcookingTime={recipe.time}\r\n\t\t\t\t\t\t\tingredientCount={recipe.ingredientCount}\r\n\t\t\t\t\t\t\tstepCount={recipe.stepCount}\r\n\t\t\t\t\t\t\trating={recipe.rating}\r\n\t\t\t\t\t\t\tratingCount={recipe.ratingCount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ForTimeSteps;","import React, { useEffect, useState } from 'react'\r\nimport {formatStr} from './helpers/Consts'\r\nimport '../style/CommonIngredients.css'\r\n\r\nconst CommonIngredients = () => {\r\n\tconst [ ingredients, setIngredients ] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst cachedIngredients = JSON.parse(localStorage.getItem('commonIngredients'))\r\n\t\tif (cachedIngredients) {\r\n\t\t\tconsole.log(cachedIngredients)\r\n\t\t\tsetIngredients(cachedIngredients)\r\n\t\t} else {\r\n\t\t\tfetch(`/common-ingredients`)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tlocalStorage.setItem('commonIngredients', JSON.stringify(data))\r\n\t\t\t\tsetIngredients(data)\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t})\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn  <div className='results-container'>\r\n\t\t{ ingredients.map((ingredient, idx) => \r\n\t\t\t<div className='ingredient-card' key={`common-ingredient-${idx}`}>\r\n\t\t\t\t<div className='name'>{formatStr(ingredient.name)}</div>\r\n\t\t\t\t<div className='recipe-count' >No. of recipes using this: {ingredient.count}</div>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t</div>\r\n}\r\n\r\nexport default CommonIngredients","import React, { useEffect, useState } from 'react'\r\nimport {\r\n\tformatStr,\r\n\trecipeCount as recipeCountConsts,\r\n\tsortBy as sortByConsts,\r\n\tmatchCategoryWithDb\r\n} from './helpers/Consts'\r\nimport './helpers/RecipeCard'\r\nimport '../style/CommonIngredients.css'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport InputDropdown from './helpers/InputDropdown'\r\n\r\nconst FewIngredients = () => {\r\n\tconst [recipes, setRecipes] = useState([])\r\n\tconst [recipeCount, setRecipeCount] = useState(recipeCountConsts.options[0])\r\n\tconst [sortBy, setSortBy] = useState(sortByConsts.options[0])\r\n\r\n\r\n\tconst fetchResults = () => {\r\n\t\tfetch(`/with-few-ingredients?` \r\n\t\t\t+ new URLSearchParams({\r\n\t\t\t\trecipeCount: recipeCount,\r\n\t\t\t\tsortBy: matchCategoryWithDb(sortBy)\r\n\t\t\t})\r\n\t\t)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetRecipes(data)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='FewIngredients'>\r\n\t\t\t<div className='inputs'>\r\n\t\t\t\t<InputDropdown\r\n\t\t\t\t\tname='recipe-count'\r\n\t\t\t\t\ttitle={recipeCountConsts.title}\r\n\t\t\t\t\tonSelectionChange={setRecipeCount}\r\n\t\t\t\t\toptions={recipeCountConsts.options} />\r\n\t\t\t\t<InputDropdown\r\n\t\t\t\t\tname='sort-by'\r\n\t\t\t\t\ttitle={sortByConsts.title}\r\n\t\t\t\t\tonSelectionChange={setSortBy}\r\n\t\t\t\t\toptions={sortByConsts.options} />\r\n\t\t\t\t<div className='button' onClick={_ => fetchResults()}>Find</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, idx) => <RecipeCard key={`recipe-${idx}`}recipe={recipe}/>)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FewIngredients","import React, { useState } from 'react'\r\nimport ForLeftover from './ForLeftover'\r\nimport ForTimePDV from './ForTimePDV'\r\nimport ForTimeSteps from './ForTimeSteps'\r\nimport CommonIngredients from './CommonIngredients'\r\nimport FewIngredients from './FewIngredients'\r\n\r\nconst ForLazyCooking = () => {\r\n\tconst options = {\r\n\t\tNONE: 0,\r\n\t\tLEFOVER: 1,\r\n\t\tTIME_PDV: 2,\r\n\t\tTIME_STEPS: 3,\r\n\t\tCOMMON_INGREDIENTS: 4,\r\n\t\tFEW_INGREDIENTS: 5,\r\n\t}\r\n\r\n\tconst [option, setOption] = useState(options.NONE)\r\n\r\n\tconst getOptionContent = () => {\r\n\t\tswitch(option) {\r\n\t\t\tdefault: \r\n\t\t\t\treturn <></>\r\n\t\t\tcase options.NONE:\r\n\t\t\t\treturn <></>\r\n\t\t\tcase options.LEFOVER:\r\n\t\t\t\treturn <ForLeftover />\r\n\t\t\tcase options.TIME_PDV:\r\n\t\t\t\treturn <ForTimePDV />\t\r\n\t\t\tcase options.TIME_STEPS:\r\n\t\t\t\treturn <ForTimeSteps />\t\r\n\t\t\tcase options.COMMON_INGREDIENTS:\r\n\t\t\t\treturn <CommonIngredients />\r\n\t\t\tcase options.FEW_INGREDIENTS:\r\n\t\t\t\treturn <FewIngredients />\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='ForLazyCooking'>\r\n\t\t\t<div className='title'>Recipes for lazy cooking</div>\r\n\t\t\t<div className='options'>\r\n\t\t\t\t<div className='for leftover' onClick={e => setOption(options.LEFOVER)}>Use leftover ingredients</div>\r\n\t\t\t\t<div className='for time-pdf' onClick={e => setOption(options.TIME_PDV)}>10 recipes for lowest cooking time & PDV</div>\r\n\t\t\t\t<div className='for common-ingredients' onClick={e => setOption(options.COMMON_INGREDIENTS)}>10 most common ingredients</div>\r\n\t\t\t\t<div className='for few-ingredients' onClick={e => setOption(options.FEW_INGREDIENTS)}>Use at most 5 ingredients</div>\r\n\t\t\t</div>\r\n\t\t\t{ getOptionContent() }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ForLazyCooking;","import React, { useState } from 'react'\r\nimport InputDropdown from './helpers/InputDropdown'\r\nimport InputText from './helpers/InputText'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport { \r\n\tsortBy as sortByConsts, \r\n\trecipeCount as recipeCountConsts,\r\n\tmatchCategoryWithDb } from './helpers/Consts'\r\nimport '../style/ForDish.css'\r\n\r\nconst ExcludeIngredients = () => {\r\n\r\n\tconst [ingredients, setIngredients] = useState('')\r\n\tconst [recipeCount, setRecipeCount] = useState(recipeCountConsts.options[0])\r\n\tconst [sortBy, setSortBy] = useState(sortByConsts.options[0])\r\n\tconst [recipes, setRecipes] = useState([])\r\n\r\n\t// Process input ingredients from a string with commas\r\n\tconst separateIngredients = (ingredients) =>\r\n\t\tingredients.split(',') // separate incredients by comma\r\n\t\t\t.map(item => item.trim()) // get rid of white space\r\n\t\t\t.filter(item => item !== '') // get rid of emptry string\r\n\r\n\tconst fetchResults = () => {\r\n\t\tconst separatedIngredients = separateIngredients(ingredients)\r\n\t\tconst params = new URLSearchParams()\r\n\r\n\t\tseparatedIngredients.forEach(item =>\r\n\t\t\tparams.append('ingredients[]', item))\r\n\r\n\t\tparams.append('recipeCount', recipeCount)\r\n\t\tparams.append('sortBy', matchCategoryWithDb(sortBy))\r\n\r\n\t\tfetch('/without-ingredients?' + params)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst json = res.json()\r\n\t\t\t\treturn json\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetRecipes(data)\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='ExcludeIngredients'>\r\n\t\t\t<div className='inputs'>\r\n\t\t\t\t<InputText\r\n\t\t\t\t\tname='ingredients'\r\n\t\t\t\t\ttitle={'Ingredients to exclude'}\r\n\t\t\t\t\tonInputChange={setIngredients}\r\n\t\t\t\t\tplaceholder='Input up to 3 ingredients and separate them by comma...' />\r\n\t\t\t\t<InputDropdown\r\n\t\t\t\t\tname='recipe-count'\r\n\t\t\t\t\ttitle={recipeCountConsts.title}\r\n\t\t\t\t\tonSelectionChange={setRecipeCount}\r\n\t\t\t\t\toptions={recipeCountConsts.options} />\r\n\t\t\t\t<InputDropdown\r\n\t\t\t\t\tname='sort-by'\r\n\t\t\t\t\ttitle={sortByConsts.title}\r\n\t\t\t\t\tonSelectionChange={setSortBy}\r\n\t\t\t\t\toptions={sortByConsts.options} />\r\n\t\t\t\t<div className='button' onClick={e => fetchResults()}>Find</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, i) =>\r\n\t\t\t\t\t<div key={`recipe-${i}`}>\r\n\t\t\t\t\t\t<RecipeCard recipe={recipe} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ExcludeIngredients;","import React, { useState } from 'react'\r\nimport InputDropdown from './helpers/InputDropdown'\r\nimport InputText from './helpers/InputText'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport { \r\n\tsortBy as sortByConsts, \r\n\trecipeCount as recipeCountConsts, \r\n\tmatchCategoryWithDb,\r\n\tseparateInputString } from './helpers/Consts'\r\nimport '../style/RestrictionsAndNeeds.css'\r\n\r\nconst NutritionalNeeds = () => {\r\n\r\n\tconst [nutritions, setNutritions] = useState('')\r\n\tconst [recipeCount, setRecipeCount] = useState(recipeCountConsts.options[0])\r\n\tconst [sortBy, setSortBy] = useState(sortByConsts.options[0])\r\n\tconst [recipes, setRecipes] = useState([])\r\n\r\n\tconst fetchResults = () => {\r\n\t\tconst separatedIngredients = separateInputString(nutritions)\r\n\t\tconst params = new URLSearchParams()\r\n\r\n\t\tseparatedIngredients.forEach(item =>\r\n\t\t\tparams.append('nutritions[]', item))\r\n\r\n\t\tparams.append('recipeCount', recipeCount)\r\n\t\tconsole.log(sortBy)\r\n\t\tconsole.log(matchCategoryWithDb(sortBy))\r\n\t\tparams.append('sortBy', matchCategoryWithDb(sortBy))\r\n\r\n\t\tfetch('/nutritions?' + params)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst json = res.json()\r\n\t\t\t\treturn json\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetRecipes(data)\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='NutritionalNeeds'>\r\n\t\t\t<div className='inputs'>\r\n\t\t\t\t<InputText\r\n\t\t\t\t\tname='nutritions'\r\n\t\t\t\t\ttitle={'Max amount of sugar, sodium, protein, saturated fat, and total fat to include'}\r\n\t\t\t\t\tonInputChange={setNutritions}\r\n\t\t\t\t\tplaceholder='Ex: 20, 10, 40, 5, 10 for sugar, sodium, protein, saturated fat and total fat respectively...' />\r\n\t\t\t\t<InputDropdown\r\n\t\t\t\t\tname='recipe-count'\r\n\t\t\t\t\ttitle={recipeCountConsts.title}\r\n\t\t\t\t\tonSelectionChange={setRecipeCount}\r\n\t\t\t\t\toptions={recipeCountConsts.options} />\r\n\t\t\t\t<InputDropdown\r\n\t\t\t\t\tname='sort-by'\r\n\t\t\t\t\ttitle={sortByConsts.title}\r\n\t\t\t\t\tonSelectionChange={setSortBy}\r\n\t\t\t\t\toptions={sortByConsts.options} />\r\n\t\t\t\t<div className='button' onClick={e => fetchResults()}>Find</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, i) =>\r\n\t\t\t\t\t<div key={`recipe-${i}`}>\r\n\t\t\t\t\t\t<RecipeCard recipe={recipe}/>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NutritionalNeeds;","import React, { useState } from 'react'\r\nimport InputDropdown from './helpers/InputDropdown'\r\nimport InputText from './helpers/InputText'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport { \r\n\tsortBy as sortByConsts, \r\n\trecipeCount as recipeCountConsts, \r\n\trestrictions as restrictionConsts,\r\n\tmatchCategoryWithDb \r\n} from './helpers/Consts'\r\nimport '../style/ForDish.css'\r\nimport '../style/RestrictionsAndNeeds.css'\r\n\r\nconst RestrictionsNeeds = () => {\r\n\tconst [restriction, setRestriction] = useState(restrictionConsts.options[0])\r\n\tconst [recipeCount, setRecipeCount] = useState(recipeCountConsts.options[0])\r\n\tconst [sortBy, setSortBy] = useState(sortByConsts.options[0])\r\n\tconst [recipes, setRecipes] = useState([])\r\n\r\n\tconst fetchResults = () => {\r\n\t\tconst params = new URLSearchParams()\r\n\t\tparams.append('restriction', matchCategoryWithDb(restriction))\r\n\t\tparams.append('recipeCount', recipeCount)\r\n\t\tparams.append('sortBy', matchCategoryWithDb(sortBy))\r\n\r\n\t\tfetch('/restriction?' + params)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconst json = res.json()\r\n\t\t\t\treturn json\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetRecipes(data)\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t})\r\n\t}\r\n\treturn (\r\n\t\t<div className='ExcludeIngredients'>\r\n\t\t\t<div className='inputs'>\r\n\t\t\t\t<InputDropdown name='restriction' title='Restriction (nut or meat)'\r\n\t\t\t\t\tonSelectionChange={setRestriction} options={restrictionConsts.options} />\r\n\t\t\t\t<InputDropdown name='recipe-count' title={recipeCountConsts.title}\r\n\t\t\t\t\tonSelectionChange={setRecipeCount} options={recipeCountConsts.options} />\r\n\t\t\t\t<InputDropdown name='sort-by' title={sortByConsts.title}\r\n\t\t\t\t\tonSelectionChange={setSortBy} options={sortByConsts.options} />\r\n\t\t\t\t<div className='button' onClick={e => fetchResults()}>Find</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, i) =>\r\n\t\t\t\t\t<div key={`recipe-${i}`}> <RecipeCard recipe={recipe}/></div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RestrictionsNeeds;","import React, { useState } from 'react'\r\nimport ExcludeIngredients from './ExcludeIngredients'\r\nimport NutritionalNeeds from './NutritionalNeeds'\r\nimport RestrictionsNeeds from './RestrictionsNeeds'\r\n\r\nconst ForRestrictionsNeeds = () => {\r\n\tconst options = {\r\n\t\tNONE: 0,\r\n\t\tEXCLUDE_INGREDIENTS: 1,\r\n\t\tNUTRITION: 2,\r\n\t\tRESTRICTION_NEEDS: 3\r\n\t}\r\n\r\n\tconst [option, setOption] = useState(options.NONE)\r\n\r\n\tconst getOptionContent = () => {\r\n\t\tswitch(option) {\r\n\t\t\tdefault: \r\n\t\t\t\treturn <></>\r\n\t\t\tcase options.NONE:\r\n\t\t\t\treturn <></>\r\n\t\t\tcase options.EXCLUDE_INGREDIENTS:\r\n\t\t\t\treturn <ExcludeIngredients />\r\n\t\t\tcase options.NUTRITION:\r\n\t\t\t\treturn <NutritionalNeeds />\t\r\n\t\t\tcase options.RESTRICTION_NEEDS:\r\n\t\t\t\treturn <RestrictionsNeeds />\t\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='ForRestrictionsNeeds'>\r\n\t\t\t\t<div className='title'> Recipes for restrictions & needs</div>\r\n\t\t\t\t<div className='options'>\r\n\t\t\t\t<div className='for exclude-ingredients' onClick={e => setOption(options.EXCLUDE_INGREDIENTS)}>Exclude ingredients</div>\r\n\t\t\t\t<div className='for nutritional-needs' onClick={e => setOption(options.NUTRITION)}>Nutritional needs</div>\r\n\t\t\t\t<div className='for restriction-and-needs' onClick={e => setOption(options.RESTRICTION_NEEDS)}>Restriction & needs</div>\r\n\t\t\t</div>\r\n\t\t\t{ getOptionContent() }\r\n\t\t</div>)\r\n}\r\n\r\nexport default ForRestrictionsNeeds;","import React, { useEffect, useState } from 'react'\r\nimport InputDropdown from './helpers/InputDropdown'\r\nimport RecipeCard from './helpers/RecipeCard'\r\nimport { \r\n\tsortByWithIngredients as sortByConsts, \r\n\trecipeCount as recipeCountConsts, \r\n\tmatchCategoryWithDb\r\n} from './helpers/Consts'\r\nimport '../style/ForLeftover.css'\r\n\r\nconst UniqueDishes = () => {\r\n\tconst [recipes, setRecipes] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchResults = () => {\r\n\t\t\tfetch('/unique')\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tconst json = res.json()\r\n\t\t\t\t\treturn json\r\n\t\t\t\t})\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tsetRecipes(data)\r\n\t\t\t\t\tlocalStorage.setItem('uniqueRecipes', JSON.stringify(data))\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => {\r\n\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t\treturn alert('Something went wrong while fetching result')\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst uniqueDishes = JSON.parse(localStorage.getItem('uniqueRecipes'))\r\n\t\tif (uniqueDishes) {\r\n\t\t\tsetRecipes(uniqueDishes)\r\n\t\t} else {\r\n\t\t\tfetchResults()\r\n\t\t}\r\n\t}, [])\r\n\t\r\n\treturn (\r\n\t\t<div className='ForLeftover'>\r\n\t\t\t<div className='title'>Unique Dishes</div>\r\n\t\t\t<div className='results-container'>\r\n\t\t\t\t{recipes.map((recipe, i) =>\r\n\t\t\t\t\t<div key={`recipe-${i}`}>\r\n\t\t\t\t\t\t<RecipeCard recipe={recipe}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UniqueDishes;","import React from 'react';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch\r\n} from 'react-router-dom';\r\nimport Home from './Home'\r\nimport NavBar from './helpers/NavBar'\r\nimport ForDish from './ForDish'\r\nimport ForLazyCooking from './ForLazyCooking'\r\nimport ForRestrictionsNeeds from './ForRestrictionsNeeds'\r\nimport UniqueDishes from './UniqueDishes'\r\n\r\nexport default class App extends React.Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\t\trender={() => <Home />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/home\"\r\n\t\t\t\t\t\t\trender={() => <Home />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/for-a-dish\"\r\n\t\t\t\t\t\t\trender={() => <ForDish />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/for-lazy-cooking\"\r\n\t\t\t\t\t\t\trender={() => <ForLazyCooking />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/for-restrictions-and-needs\"\r\n\t\t\t\t\t\t\trender={() => <ForRestrictionsNeeds />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\tpath=\"/for-unique-dishes\"\r\n\t\t\t\t\t\t\trender={() => <UniqueDishes />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\n// import './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}